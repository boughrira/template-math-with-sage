name: PreTeXt-CLI Actions
on:
  # Runs on pull requests
  pull_request:
    branches:
      # PR events that target the main branch
      - main

  # Runs on pushes to main
  push:
    branches:
      - main

  schedule:
    # run weekly on Tuesday at midnight
    - cron: "0 0 * * 2"

  # Runs on demand
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: oscarlevin/pretext:full

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: install deps
        run: pip install -r requirements.txt

      - name: install local ptx files
        run: pretext --version

      - name: build deploy targets
        run: |
          version="$(pretext --version)"
          major="$(echo $version | cut -d '.' -f 1)"
          minor="$(echo $version | cut -d '.' -f 2)"
          if [ "$major" -ge 2 -a "$minor" -ge 5 ]; then
            echo "PreTeXt version is 2.5 or greater; using new build command"
            pretext build web --clean --generate --deploys --input=source/manuscript.ptx
          else
            echo "PreTeXt version is less than 2.5, using old build command"
            pretext build
          fi
      - name: stage deployment
        run: pretext deploy --stage-only

      - name: Bundle output/stage as artifact
        uses: actions/upload-artifact@v4
        with:
          name: deploy
          path: output/stage

      - name: Build PDF with PreTeXt
        run: pretext build print --clean --generate --input=source/manuscript.ptx

      - name: Bundle output/print as PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdf
          path: output/print

  deploy-ghpages:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "page"
      cancel-in-progress: false
    steps:
      - name: Download website artifact
        uses: actions/download-artifact@v4
        with:
          name: deploy
          path: deploy
      - name: Setup GitHub Pages
        id: check
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: deploy
      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v4

  refresh-pdf:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    permissions:
      contents: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Fetch and switch to main branch
        run: |
          git fetch origin
          git checkout main
          git reset --hard origin/main

      - name: Download PDF artifact
        uses: actions/download-artifact@v4
        with:
          name: pdf
          path: output/print

      - name: Create or update release branch from main
        run: git checkout -B release

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes
        run: |
          git add output/print/manuscript.pdf
          git commit -m "Update PDF document" || echo "No changes to commit"

      - name: Force push to release branch
        run: git push origin release --force
